# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
# Replace 'advertising_sales.csv' with your dataset's file path
df = pd.read_csv('advertising_sales.csv')

# Display the first few rows of the dataset
print(df.head())

# Assuming the dataset contains columns: 'TV', 'Radio', 'Newspaper', 'Sales'
# We will use TV advertising spend as the feature (X) to predict Sales (y)
X = df[['TV']]  # Independent variable (advertising budget on TV)
y = df['Sales']  # Dependent variable (sales)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)  # Mean Squared Error
r2 = r2_score(y_test, y_pred)  # R-squared score

# Output the results
print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared Score: {r2:.2f}")

# Plotting the regression line and the data points
plt.scatter(X_test, y_test, color='blue', label='Actual Sales')
plt.plot(X_test, y_pred, color='red', linewidth=2, label='Predicted Sales')
plt.title('TV Ad Spend vs Sales')
plt.xlabel('TV Ad Spend')
plt.ylabel('Sales')
plt.legend()
plt.show()

# Predict the sales for a given TV advertising budget
new_budget = [[100]]  # Example: TV ad budget of $100
predicted_sales = model.predict(new_budget)
print(f"Predicted sales for a TV ad budget of $100: {predicted_sales[0]:.2f}")
